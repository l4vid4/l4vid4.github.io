import{_ as i,c as a,a as t,o as l}from"./app-dsZ4C4U9.js";const n="/assets/watermark_type_ZmFuZ3poZW5naGVpdGk_shadow_10_text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNDAxMTU2_size_16_color_FFFFFF_t_70-B_6ioGxI.png",e="/assets/image-20250610163234290-DyKVmXk5.png",h={};function k(p,s){return l(),a("div",null,s[0]||(s[0]=[t('<p>[TOC]</p><h1 id="mybatis" tabindex="-1"><a class="header-anchor" href="#mybatis"><span>MyBatis</span></a></h1><h3 id="mybatis执行流程" tabindex="-1"><a class="header-anchor" href="#mybatis执行流程"><span>MyBatis执行流程</span></a></h3><h4 id="_1️⃣-配置加载" tabindex="-1"><a class="header-anchor" href="#_1️⃣-配置加载"><span>1️⃣ 配置加载</span></a></h4><ul><li>读取 <strong>mybatis-config.xml</strong> 配置文件。</li><li>加载数据库连接、事务管理器、映射器（Mapper）等配置信息。</li><li>创建 <strong>SqlSessionFactory</strong>。</li></ul><h4 id="_2️⃣-获取-sqlsession" tabindex="-1"><a class="header-anchor" href="#_2️⃣-获取-sqlsession"><span>2️⃣ 获取 SqlSession</span></a></h4><ul><li>通过 SqlSessionFactory 获取 <strong>SqlSession</strong>。</li><li>SqlSession 负责执行 SQL、管理事务、获取映射器接口对象。</li></ul><h4 id="_3️⃣-获取-mapper" tabindex="-1"><a class="header-anchor" href="#_3️⃣-获取-mapper"><span>3️⃣ 获取 Mapper</span></a></h4><ul><li>通过 SqlSession 获取 <strong>Mapper 接口的代理对象</strong>。</li><li>Mapper 接口的方法对应 XML 或注解中的 SQL 语句。</li></ul><h4 id="_4️⃣-执行-sql" tabindex="-1"><a class="header-anchor" href="#_4️⃣-执行-sql"><span>4️⃣ 执行 SQL</span></a></h4><ul><li>调用 Mapper 方法，MyBatis 生成 <strong>MappedStatement</strong>。</li><li>输入参数映射。</li><li>通过 Executor 执行对应的 SQL。 <ul><li>一级缓存检查是否命中。</li><li>若未命中，调用 JDBC 操作数据库。</li><li>结果缓存到一级缓存中。</li></ul></li><li>使用 <strong>ResultSetHandler</strong> 将结果映射为 Java 对象。</li></ul><h4 id="_5️⃣-关闭-sqlsession" tabindex="-1"><a class="header-anchor" href="#_5️⃣-关闭-sqlsession"><span>5️⃣ 关闭 SqlSession</span></a></h4><ul><li>手动关闭 SqlSession（或者用 try-with-resources 自动关闭）。</li><li>事务提交或回滚。</li></ul><h3 id="mybatis有哪些主要构件" tabindex="-1"><a class="header-anchor" href="#mybatis有哪些主要构件"><span>MyBatis有哪些主要构件</span></a></h3><table><thead><tr><th>构件</th><th>描述</th></tr></thead><tbody><tr><td>SqlSession</td><td>作为 MyBatis 工作的主要顶层 API，表示和数据库交互的会话，完成必要数据库增删改查功能</td></tr><tr><td>Executor</td><td>MyBatis 执行器，是 MyBatis 调度的核心，负责 SQL 语句的生成和查询缓 存的维护</td></tr><tr><td>StatementHandler</td><td>封装了 JDBC Statement 操作，负责对 JDBC statement 的操作，如设置参数、将 Statement 结果集转换成 List 集合。</td></tr><tr><td>ParameterHandler</td><td>负责对用户传递的参数转换成 JDBC Statement 所需要的参数</td></tr><tr><td>ResultSetHandler</td><td>负责将 JDBC 返回的 ResultSet 结果集对象转换成 List 类型的集合</td></tr><tr><td>TypeHandler</td><td>负责 java 数据类型和 jdbc 数据类型之间的映射和转换</td></tr><tr><td>MappedStatement</td><td>维护了一条 &lt;select | update | delete | insert&gt; 节点的封装</td></tr><tr><td>SqlSource</td><td>负责根据用户传递的 parameterObject，动态地生成 SQL 语句，将信息封装到 BoundSql 对象中，并返回</td></tr><tr><td>BoundSql</td><td>表示动态生成的 SQL 语句以及相应的参数信息</td></tr></tbody></table><p><img src="'+n+`" alt="点击查看图片来源"></p><h3 id="mybatis是否支持延迟加载" tabindex="-1"><a class="header-anchor" href="#mybatis是否支持延迟加载"><span>MyBatis是否支持延迟加载</span></a></h3><h4 id="延迟加载" tabindex="-1"><a class="header-anchor" href="#延迟加载"><span>延迟加载</span></a></h4><p><strong>场景</strong></p><ul><li>你查询一个对象 A，A 里有一个关联对象 B，或者一个 List&lt;B&gt; 集合。</li><li>你只想在 <strong>访问 B 时再去查询 B</strong>，而不是一开始就联表查出来。</li></ul><h4 id="开启方式" tabindex="-1"><a class="header-anchor" href="#开启方式"><span>开启方式</span></a></h4><p>在 <code>mybatis-config.xml</code> 配置：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">settings</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    &lt;!-- 开启全局延迟加载 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">setting</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">lazyLoadingEnabled</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> value</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">true</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    &lt;!-- 关联对象按需加载，而不是主动加载 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">setting</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">aggressiveLazyLoading</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> value</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">false</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">settings</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>可以在Mapper的配置文件中添加<code>fetchType=lazy</code></li></ul><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">resultMap</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> id</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">userResultMap</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> type</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">User</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">id</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> property</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">id</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> column</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">id</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">result</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> property</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">username</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> column</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">username</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">association</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> property</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">address</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> column</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">address_id</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> javaType</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Address</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> select</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">selectAddressById</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> fetchType</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">lazy</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">resultMap</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="工作原理" tabindex="-1"><a class="header-anchor" href="#工作原理"><span>工作原理</span></a></h4><ul><li>使用了CGLIB创建目标对象的代理对象</li><li>当调用目标方法user.getOrderList()时，进入拦截器invoke方法，发现user.getOrderList()是null值，执行sql查询order列表</li><li>把order查询上来，然后调用user.setOrderList(List&lt;Order&gt; orderList)，接着完成user.getOrderList()方法的调用</li></ul><p><img src="`+e+`" alt="image-20250610163234290"></p><h3 id="mybatis的一级、二级缓存" tabindex="-1"><a class="header-anchor" href="#mybatis的一级、二级缓存"><span>MyBatis的一级、二级缓存</span></a></h3><ul><li>本地缓存，基于PerpetualCache，本质是一个HashMap</li><li>一级缓存：作用域是session级别</li><li>二级缓存：作用域是namespace和mapper的作用于，不依赖于session</li></ul><h4 id="一级缓存-默认开启" tabindex="-1"><a class="header-anchor" href="#一级缓存-默认开启"><span>一级缓存（默认开启）</span></a></h4><ul><li>范围：<strong>SqlSession 级别</strong>，同一个 SqlSession 内，重复查询相同的 SQL，第二次从缓存取。</li><li>生命周期：<strong>随 SqlSession 关闭而失效</strong>。</li><li>特点： <ul><li>默认开启。</li><li>只对当前 SqlSession 有效。</li><li>INSERT、UPDATE、DELETE 操作会清空一级缓存。</li></ul></li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">SqlSession</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> session</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> sqlSessionFactory</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">openSession</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">User</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> u1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> session</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">selectOne</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">selectUserById</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">User</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> u2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> session</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">selectOne</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">selectUserById</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 从缓存取</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="二级缓存" tabindex="-1"><a class="header-anchor" href="#二级缓存"><span>二级缓存</span></a></h4><p>范围：<strong>Mapper 映射器级别</strong>（namespace 级别）。</p><p>生命周期：<strong>SqlSession 关闭后，数据写入二级缓存</strong>，多个 SqlSession 共享。</p><p>特点：</p><ul><li>默认关闭，需配置开启。</li><li>配合缓存插件可支持内存、磁盘、分布式缓存。</li><li>INSERT、UPDATE、DELETE 操作会刷新对应 namespace 的缓存。</li></ul><p><strong>开启方式</strong></p><p>① 配置全局开启：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">settings</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">setting</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">cacheEnabled</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> value</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">true</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">settings</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>② Mapper.xml 中配置：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">cache</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>③ 使用：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 第一个 SqlSession 查询，结果存入二级缓存</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">try</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">SqlSession</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> session1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> sqlSessionFactory</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">openSession</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">())</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    session1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">selectOne</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">selectUserById</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 第二个 SqlSession 查询，命中二级缓存</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">try</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">SqlSession</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> session2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> sqlSessionFactory</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">openSession</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">())</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    session2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">selectOne</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">selectUserById</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h4><ol><li>对于缓存数据更新机制，当某一个作用域（一级缓存Session/二级缓存Namespaces）进行了新增、修改、删除操作后，默认该作用域下的所有select中的缓存将被clear。</li><li>二级缓存需要缓存的数据实现Serializable接口</li><li>只有会话提交或者关闭以后，一级缓存中的数据才会转移到二级缓存中</li></ol><h3 id="与传统的jdbc相比-mybatis的优点" tabindex="-1"><a class="header-anchor" href="#与传统的jdbc相比-mybatis的优点"><span>与传统的JDBC相比，MyBatis的优点？</span></a></h3><h5 id="简化-sql-操作" tabindex="-1"><a class="header-anchor" href="#简化-sql-操作"><span>简化 SQL 操作</span></a></h5><ul><li>不需要手写复杂的 <strong>JDBC 模板代码</strong>（如加载驱动、创建连接、处理 ResultSet、关闭资源）。</li><li>只需编写 Mapper 接口 + XML/注解，调用接口即可。</li></ul><h5 id="sql-与-java-解耦" tabindex="-1"><a class="header-anchor" href="#sql-与-java-解耦"><span>SQL 与 Java 解耦</span></a></h5><ul><li>SQL 统一放在 XML 或注解中，<strong>方便管理和优化</strong>。</li><li>JDBC 是硬编码 SQL，改 SQL 需改代码。</li></ul><h5 id="自动映射" tabindex="-1"><a class="header-anchor" href="#自动映射"><span>自动映射</span></a></h5><ul><li><strong>ResultMap 自动映射</strong>数据库字段 → Java 对象属性，减少手动赋值。</li><li>JDBC 需手动一行一行解析 ResultSet。</li></ul><h5 id="动态-sql-支持" tabindex="-1"><a class="header-anchor" href="#动态-sql-支持"><span>动态 SQL 支持</span></a></h5><ul><li>MyBatis 支持 <strong>动态 SQL</strong>（if、choose、foreach 等），方便拼接复杂查询。</li><li>JDBC 拼接 SQL 需要手动处理，容易出错、存在 SQL 注入风险。</li></ul><h5 id="缓存机制" tabindex="-1"><a class="header-anchor" href="#缓存机制"><span>缓存机制</span></a></h5><ul><li>内置 <strong>一级缓存、二级缓存</strong> 支持，减少数据库访问。</li><li>JDBC 无缓存机制，重复查询都需访问数据库。</li></ul><h5 id="易于集成" tabindex="-1"><a class="header-anchor" href="#易于集成"><span>易于集成</span></a></h5><ul><li>MyBatis <strong>易于集成 Spring、Spring Boot</strong>，支持事务、依赖注入。</li><li>JDBC 需要自己管理事务、连接等，开发复杂度高。</li></ul><h5 id="插件机制" tabindex="-1"><a class="header-anchor" href="#插件机制"><span>插件机制</span></a></h5><ul><li>MyBatis 支持 <strong>拦截器插件</strong>（分页、日志、性能分析等）。</li><li>JDBC 没有统一插件机制，功能扩展困难。</li></ul><h3 id="jdbc连接数据库的步骤" tabindex="-1"><a class="header-anchor" href="#jdbc连接数据库的步骤"><span>JDBC连接数据库的步骤</span></a></h3><ol><li><p>加载数据库驱动（新版 JDBC 可省略，自动加载）</p></li><li><p>获取数据库连接</p></li><li><p>创建 Statement 或 PreparedStatement</p></li><li><p>执行 SQL</p></li><li><p>处理结果集</p></li><li><p>关闭资源</p></li></ol><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        try</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">            // 加载数据库驱动程序</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">            Class</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">forName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">com.mysql.cj.jdbc.Driver</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">            // 建立数据库连接</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            Connection</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> connection</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> DriverManager</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">getConnection</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">jdbc:mysql://localhost:3306/mydatabase</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">username</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">password</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">            // 创建Statement对象</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            Statement</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> statement</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> connection</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">createStatement</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">            // 执行SQL查询</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            ResultSet</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> resultSet</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> statement</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">executeQuery</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">SELECT * FROM mytable</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">            // 处理查询结果</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">            while</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">resultSet</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">next</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()){</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                // 处理每一行数据</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">            //关闭资源</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">            resultSet</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">close</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">            statement</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">close</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">            connection</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">close</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">catch</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">ClassNotFoundException </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">e</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">){</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">            e</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">printStackTrace</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">catch</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">SQLException </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">e</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">){</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">            e</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">printStackTrace</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="如果项目中要用到原生的mybatis去查询-该怎样写" tabindex="-1"><a class="header-anchor" href="#如果项目中要用到原生的mybatis去查询-该怎样写"><span>如果项目中要用到原生的mybatis去查询，该怎样写</span></a></h3><h4 id="步骤概述" tabindex="-1"><a class="header-anchor" href="#步骤概述"><span>步骤概述</span></a></h4><ol><li><p>配置MyBatis：在配置文件中配置数据源、MyBatis的Mapper文件位置等信息</p></li><li><p>创建实体类：创建与数据库表对应的实体类，字段名和类型需要与数据库表保持一致。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> User</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    private</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Long</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> id</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    private</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> String</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> username</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    //Getters and setters</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>编写SQL映射文件：在resources目录下创建XML文件，定义SQL语句和映射关系</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">&lt;!-- userMapper.xml --&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">mapper</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> namespace</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">com.example.dao.UserMapper</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">	&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">select</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> id</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">selectUserById</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> resultType</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">com.example.model.User</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    	SELECT * FROM users WHERE id = #{id}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">select</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">mapper</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>编写DAO接口：创建DAO接口，定义查询方法</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> interface</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> UserMapper</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    User </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">selectUserById</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">long</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> id</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>编写具体的SQL查询语句</p></li><li><p>调用查询方法：在服务层或者控制层中调用DAO接口中的方法进行查询。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 在service层中调用</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">User</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> user</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> userMapper</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">selectUserById</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="mybatis里的-和-的区别" tabindex="-1"><a class="header-anchor" href="#mybatis里的-和-的区别"><span>MyBatis里的#和$的区别？</span></a></h3><table><thead><tr><th>项目</th><th><code>#</code>（占位符）</th><th><code>$</code>（字符串拼接）</th></tr></thead><tbody><tr><td>替换方式</td><td>使用 <strong>预编译参数占位符</strong></td><td><strong>直接字符串拼接</strong></td></tr><tr><td>安全性</td><td><strong>安全，防 SQL 注入</strong></td><td>不安全，容易 SQL 注入</td></tr><tr><td>使用场景</td><td>大多数情况（如 where 条件）</td><td>表名/列名动态拼接等特定场景</td></tr><tr><td>SQL 示例</td><td><code>WHERE id = #{id}</code></td><td><code>ORDER BY \${column}</code></td></tr></tbody></table><ul><li>MyBatis在处理#{}时，会创建预编译的SQL语句，将SQL中的#{}替换为?号，在执行SQL时会为预编译SQL中的占位符（？）赋值，调用PreparedStatement的set方法来赋值，预编译的SQL语句执行效率高，并且可以防止SQL注入，提供更高的安全性，适合传递参数值。</li><li>MyBatis在处理\${}时，只是创建普通的SQL语句，然后在执行SQL语句时MyBatis将参数直接拼入到SQL里，不能防止SQL注入，因为参数直接拼接到SQL语句中，如果参数未经验证、过滤，可鞥会导致安全问题。</li></ul><h3 id="mybatis运用了哪些常见的设计模式" tabindex="-1"><a class="header-anchor" href="#mybatis运用了哪些常见的设计模式"><span>MyBatis运用了哪些常见的设计模式</span></a></h3><h5 id="_1️⃣-代理模式-proxy-pattern" tabindex="-1"><a class="header-anchor" href="#_1️⃣-代理模式-proxy-pattern"><span>1️⃣ 代理模式（Proxy Pattern）</span></a></h5><ul><li><p>应用：</p><ul><li>Mapper 接口的实现是由 MyBatis 通过 <strong>JDK 动态代理</strong> 生成的。</li></ul></li><li><p>作用：</p><ul><li>拦截方法调用，将其转换为 SQL 执行过程。</li></ul></li><li><p>示例：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">UserMapper</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> mapper</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> sqlSession</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">getMapper</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">UserMapper</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">class</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>实际返回的是代理对象，不是真实实现类。</p></li></ul><h5 id="_2️⃣-工厂模式-factory-pattern" tabindex="-1"><a class="header-anchor" href="#_2️⃣-工厂模式-factory-pattern"><span>2️⃣ 工厂模式（Factory Pattern）</span></a></h5><ul><li>应用： <ul><li><code>SqlSessionFactory</code>、<code>SqlSessionFactoryBuilder</code></li></ul></li><li>作用： <ul><li><strong>统一创建 SqlSession</strong>，封装构建细节。</li></ul></li></ul><h5 id="_3️⃣-单例模式-singleton-pattern" tabindex="-1"><a class="header-anchor" href="#_3️⃣-单例模式-singleton-pattern"><span>3️⃣ 单例模式（Singleton Pattern）</span></a></h5><ul><li>应用： <ul><li><code>Configuration</code>、<code>MapperRegistry</code> 、<code>LogFactory</code>等核心类通常是单例使用，统一配置管理。</li></ul></li><li>作用： <ul><li>保证配置对象在应用中唯一。</li></ul></li></ul><h5 id="_4️⃣-建造者模式-builder-pattern" tabindex="-1"><a class="header-anchor" href="#_4️⃣-建造者模式-builder-pattern"><span>4️⃣ 建造者模式（Builder Pattern）</span></a></h5><ul><li>应用： <ul><li><code>SqlSessionFactoryBuilder</code>、<code>XMLConfigBuilder</code> 等。</li></ul></li><li>作用： <ul><li><strong>分步构建复杂对象</strong>（如 SqlSessionFactory）。</li></ul></li></ul><h5 id="_5️⃣-策略模式-strategy-pattern" tabindex="-1"><a class="header-anchor" href="#_5️⃣-策略模式-strategy-pattern"><span>5️⃣ 策略模式（Strategy Pattern）</span></a></h5><ul><li>应用： <ul><li><code>Executor</code> 接口的多种实现（如 SimpleExecutor、ReuseExecutor、BatchExecutor）。</li></ul></li><li>作用： <ul><li><strong>封装不同执行策略</strong>，运行时动态选择。</li></ul></li></ul><h5 id="_6️⃣-模板方法模式-template-method-pattern" tabindex="-1"><a class="header-anchor" href="#_6️⃣-模板方法模式-template-method-pattern"><span>6️⃣ 模板方法模式（Template Method Pattern）</span></a></h5><ul><li>应用： <ul><li><code>BaseExecutor</code> 提供模板方法，子类实现具体步骤（如执行 SQL、缓存处理等）。</li></ul></li><li>作用： <ul><li><strong>统一流程控制，具体实现延迟到子类</strong>。</li></ul></li></ul><h2 id="mybatis-plus" tabindex="-1"><a class="header-anchor" href="#mybatis-plus"><span>MyBatis-Plus</span></a></h2><h3 id="mybatis-plus和mybatis的区别" tabindex="-1"><a class="header-anchor" href="#mybatis-plus和mybatis的区别"><span>MyBatis-Plus和MyBatis的区别</span></a></h3><table><thead><tr><th>方面</th><th>MyBatis</th><th>MyBatis-Plus</th></tr></thead><tbody><tr><td>基础框架</td><td>SQL 映射框架</td><td><strong>基于 MyBatis，增强工具包</strong></td></tr><tr><td>配置复杂度</td><td>配置较复杂，需要写 Mapper XML</td><td><strong>零侵入，开箱即用，简化配置</strong></td></tr><tr><td>CRUD 代码</td><td>需手写 CRUD SQL + XML</td><td><strong>提供通用 CRUD 接口</strong>，无需 XML</td></tr><tr><td>代码量</td><td>较多，重复性高</td><td>大量减少重复代码</td></tr><tr><td>动态条件构造</td><td>需手写动态 SQL</td><td>提供 <strong>LambdaWrapper、QueryWrapper</strong> 等丰富封装</td></tr><tr><td>分页功能</td><td>需手写分页 SQL</td><td>内置 <strong>分页插件</strong>，一键分页</td></tr><tr><td>主键策略</td><td>手动配置</td><td>内置 <strong>主键自动生成策略</strong></td></tr><tr><td>代码生成</td><td>无官方代码生成器</td><td><strong>提供代码生成器</strong>，自动生成 Entity、Mapper、Service 等</td></tr><tr><td>插件支持</td><td>插件生态一般</td><td>插件丰富，如乐观锁、性能分析、多租户等</td></tr><tr><td>学习成本</td><td>基础 SQL 要掌握良好</td><td>基于 MyBatis，<strong>学习成本低</strong>，上手快</td></tr><tr><td>多租户支持</td><td>无</td><td>提供了多租户支持，可以轻松实现多租户数据隔离的功能。</td></tr></tbody></table><blockquote><p><strong>多租户问题</strong>：在同一套系统中服务多个客户（租户）时，如何保证数据隔离、功能隔离、安全隔离。</p><p>MyBatis-Plus 提供 <strong>多租户插件（TenantLineInterceptor）</strong>。</p><p>可以自动在 SQL 中加上租户 ID 条件，避免忘加租户条件导致数据泄露。</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SELECT</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> user → 自动变为 → </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SELECT</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> user </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">WHERE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> tenant_id </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></blockquote><h3 id="mybatis-plus-的主要特性是什么" tabindex="-1"><a class="header-anchor" href="#mybatis-plus-的主要特性是什么"><span>MyBatis-Plus 的主要特性是什么？</span></a></h3><p>MyBatis-Plus 是对 MyBatis 的增强，提供了以下主要特性：</p><ul><li><strong>无 XML 配置</strong>：支持注解方式进行 SQL 映射。</li><li><strong>内置 CRUD 方法</strong>：提供了 <code>insert()</code>, <code>update()</code>, <code>delete()</code>, <code>selectById()</code> 等常用方法。</li><li><strong>条件构造器</strong>：通过 <code>QueryWrapper</code> 和 <code>UpdateWrapper</code> 构建动态 SQL。</li><li><strong>分页插件</strong>：内置分页功能，支持多种数据库。</li><li><strong>代码生成器</strong>：自动生成实体类、Mapper、XML 等代码。</li><li><strong>逻辑删除</strong>：支持逻辑删除字段的自动处理。</li></ul><h3 id="如何使用-mybatis-plus-进行分页查询" tabindex="-1"><a class="header-anchor" href="#如何使用-mybatis-plus-进行分页查询"><span>如何使用 MyBatis-Plus 进行分页查询？</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">IPage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">User</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> page</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> new</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Page</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;&gt;(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 10</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 当前页和每页大小</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">IPage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">User</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> userPage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> userMapper</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">selectPage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">page</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> null</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>selectPage</code> 方法返回一个 <code>IPage</code> 对象，包含分页信息和查询结果。</p><h3 id="如何在-mybatis-plus-中实现逻辑删除" tabindex="-1"><a class="header-anchor" href="#如何在-mybatis-plus-中实现逻辑删除"><span>如何在 MyBatis-Plus 中实现逻辑删除？</span></a></h3><ol><li><p>在实体类中添加逻辑删除字段，并使用 <code>@TableLogic</code> 注解：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">TableLogic</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">private</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Integer</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> isDeleted</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在<code>application.yml</code>或者全局配置中启用逻辑删除</p></li></ol><h3 id="mybatis-plus-的-tablefield-注解的作用是什么" tabindex="-1"><a class="header-anchor" href="#mybatis-plus-的-tablefield-注解的作用是什么"><span>MyBatis-Plus 的 <code>@TableField</code> 注解的作用是什么？</span></a></h3><p><code>@TableField</code> 注解用于指定实体类字段与数据库表字段的映射关系。常用属性包括：</p><ul><li><code>value</code>：指定数据库表字段名。</li><li><code>exist</code>：是否为数据库字段，默认 <code>true</code>，表示是数据库字段。</li><li><code>fill</code>：字段填充策略，如 <code>FieldFill.INSERT</code> 表示在插入时填充。</li></ul><h3 id="如何使用-mybatis-plus-进行批量插入" tabindex="-1"><a class="header-anchor" href="#如何使用-mybatis-plus-进行批量插入"><span>如何使用 MyBatis-Plus 进行批量插入？</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">List</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">User</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> userList</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Arrays</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">asList</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">new</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> User</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Alice</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">),</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> new</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> User</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Bob</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">));</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">userMapper</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">insertBatchSomeColumn</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">userList</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>insertBatchSomeColumn</code> 方法用于批量插入数据。</p><h3 id="mybatis-plus中的db工具类" tabindex="-1"><a class="header-anchor" href="#mybatis-plus中的db工具类"><span>MyBatis-Plus中的Db工具类</span></a></h3><p><code>Db</code> 是 MyBatis-Plus 提供的一个操作数据库的工具类，封装了常用的增删改查操作，简化了开发流程。它内部使用默认的 <code>SqlSessionFactory</code>，让你无需写 Mapper 接口即可执行简单的数据库操作。</p><ul><li>在日常开发中，如果一个<code>service</code>必须要调用其它数据表的数据，可以使用Db工具调用，避免循环依赖问题。</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 查询单条记录</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">User</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> user</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Db</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">lambdaQuery</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">User</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">class</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">              .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">eq</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">User</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">::</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">getId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">              .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">one</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 插入记录</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">User</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> newUser</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> new</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> User</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">newUser</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">setName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">张三</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Db</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">save</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">newUser</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 更新记录</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Db</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">lambdaUpdate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">User</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">class</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">eq</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">User</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">::</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">getId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">set</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">User</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">::</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">getName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">李四</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">update</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mybatis-plus中各种条件构造器的区别" tabindex="-1"><a class="header-anchor" href="#mybatis-plus中各种条件构造器的区别"><span>MyBatis-Plus中各种条件构造器的区别</span></a></h3><table><thead><tr><th>条件构造器</th><th>作用</th><th>特点</th><th>示例</th></tr></thead><tbody><tr><td>QueryWrapper</td><td>构建查询条件</td><td>使用字段名字符串，链式调用</td><td><code>new QueryWrapper&lt;&gt;().eq(&quot;age&quot;, 18)</code></td></tr><tr><td>UpdateWrapper</td><td>构建更新条件</td><td>设置更新字段和条件，字段名字符串</td><td><code>new UpdateWrapper&lt;&gt;().eq(&quot;id&quot;, 1).set(&quot;name&quot;, &quot;李四&quot;)</code></td></tr><tr><td>LambdaQueryWrapper</td><td>Lambda 风格查询条件</td><td>类型安全，避免硬编码字段名</td><td><code>new LambdaQueryWrapper&lt;&gt;().eq(User::getAge, 18)</code></td></tr><tr><td>LambdaUpdateWrapper</td><td>Lambda 风格更新条件</td><td>类型安全，支持自动重构</td><td><code>new LambdaUpdateWrapper&lt;&gt;().eq(User::getId, 1).set(User::getName, &quot;李四&quot;)</code></td></tr><tr><td>Wrappers</td><td>条件构造器工具类</td><td>统一创建各种构造器，简化调用</td><td><code>Wrappers.&lt;User&gt;lambdaQuery().eq(User::getAge, 18)</code></td></tr></tbody></table><h3 id="如何在-mybatis-plus-中使用乐观锁" tabindex="-1"><a class="header-anchor" href="#如何在-mybatis-plus-中使用乐观锁"><span>如何在 MyBatis-Plus 中使用乐观锁？</span></a></h3><blockquote><p>乐观锁是一种并发控制机制，用于防止多个线程同时修改同一数据时产生冲突，通常在数据表加一列<code>version</code>，用来记录数据的版本号，每次更新时版本号自动加1。</p><p><strong>原理：</strong></p><p>每次读取数据时，会带上一个版本号（或时间戳）；更新数据时，会检查版本号是否未变，只有版本号没变，才允许更新；如果版本号变了，说明数据被其他线程修改过，当前更新失败，需重新读取数据再操作。</p></blockquote><ol><li><p>在实体类中添加版本字段</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">Version</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">private</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Integer</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> version</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在全局配置中启用乐观锁插件</p></li></ol>`,111)]))}const r=i(h,[["render",k]]),g=JSON.parse('{"path":"/studyNotes/vnni2i5e/","title":"面试题-MyBatis","lang":"zh-CN","frontmatter":{"title":"面试题-MyBatis","createTime":"2025/07/03 02:39:45","permalink":"/studyNotes/vnni2i5e/"},"readingTime":{"minutes":11.7,"words":3509},"git":{"updatedTime":1751510373000,"contributors":[{"name":"Lang","username":"Lang","email":"914551901@qq.com","commits":3,"avatar":"https://avatars.githubusercontent.com/Lang?v=4","url":"https://github.com/Lang"}]},"filePathRelative":"notes/学习笔记/八股文/面试题-MyBatis.md","headers":[]}');export{r as comp,g as data};
